<%- include('../partials/admin/adminHeader.ejs') %>


<head>
  <!-- jQuery CDN -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Toastr CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<!-- Bootstrap CSS CDN -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<!-- Bootstrap JS CDN -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

  <style>
          #toast-container .toast-error {
color: red;
background-color: rgb(120, 132, 194);
}
  .red-error {
color: red;
font-weight: bold;
}
      .container {
          max-width: 800px;
          margin: 0 auto;
          padding: 20px;
      }

      .title {
          text-align: center;
          color: #333;
      }

      .form {
          display: flex;
          flex-direction: column;
          margin-top: 20px;
      }

      .form-label {
          margin-bottom: 10px;
      }

      .form-input {
          padding: 8px;
          margin-bottom: 10px;
          border: 1px solid #ccc;
          border-radius: 4px;
      }

      .btn-generate {
          padding: 10px 20px;
          background-color: rgb(164, 11, 11);
          color: #fff;
          border: none;
          border-radius: 4px;
          cursor: pointer;
      }

      .report {
          margin-top: 20px;
          padding: 20px;
          border: 1px solid #ccc;
          border-radius: 4px;
      }
  </style>
</head>

<body>
  <div class="container" style="padding-top:40px">
      <h3 class="title"><spam class="text-danger">Sales</spam> <spam> </spam>Report</h3>

      <form id="reportForm" class="form">
          <label for="startDate" class="form-label"><spam class="text-danger">Start</spam> Date:</label>
          <input type="date" id="startDate" name="startDate" class="form-input" required>

          <label for="endDate" class="form-label"><spam class="text-danger">End</spam> Date:</label>
          <input type="date" id="endDate" name="endDate" class="form-input" required>

          <button type="submit" class="btn-generate">Generate Report</button>
      </form>

      <div id="salesReport" class="report"></div>
  </div>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>
  <script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>
  <script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>
  <!--<script>
         document.getElementById('reportForm').addEventListener('submit', function(event) {
    var startDate = new Date(document.getElementById('startDate').value);
    var endDate = new Date(document.getElementById('endDate').value);

    if (endDate < startDate) {
      event.preventDefault(); // Prevent form submission
      alert("End date should be greater than or equal to the start date.");
    }
  });
  </script>-->
  <script>
    const reportForm = document.getElementById('reportForm');
    const salesReportSection = document.getElementById('salesReport');

    reportForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const startDate = new Date(document.getElementById('startDate').value).toLocaleDateString('en-US');
        const endDate = new Date(document.getElementById('endDate').value).toLocaleDateString('en-US');

        const currentDate = new Date();
        if (new Date(startDate) > new Date(endDate)) {
            toastr.error('Start date cannot be greater than end date.');
            return;
        }

        try {
            const response = await fetch('/admin/report-download', {
                method: 'POST',
                body: JSON.stringify({ startDate, endDate }),
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            if (!response.ok) {
                throw new Error(`Failed to fetch sales report. Status: ${response.status}`);
            }

            const data = await response.json();

            // Update the sales report section with the generated report
           // Update the sales report section with the generated report
salesReportSection.innerHTML = `
    <div id="report">
        <table class="table" id="myTable">
            <h2>Sales Report (${startDate} - ${endDate})</h2>
            <thead>
                <tr>
                    <th>SL.No</th>
                    <th>TotalAmount</th>
                    <th>PaymentMode</th>
                    <th>OrderedDate</th>
                    <th>User Address</th>
                    <th>Products</th>
                    <th>Quantity</th>
                </tr>
            </thead>
            <tbody>
                ${data.orders.map((order, index) => `
                    <tr>
                        <td>${index + 1}</td>
                        <td>Rs.${order.totalAmount}/-</td>
                        <td>${order.paymentMethod}</td>
                        <td>${order.formattedDateOrdered}</td>
                        <td>${order.userAddress.streetAddress}, ${order.userAddress.city}, ${order.userAddress.postcode}</td>
                        <td>
                            ${order.products.map(product => `
                                ${product.productName} <br>
                            `).join('')}
                        </td>
                        <td>
                            ${order.products.map(product => `
                                ${product.quantity}<br>
                            `).join('')}
                        </td>
                    </tr>
                `).join('')}
                <tr>
                    <td style="color:black;">SubTotal:Rs.${data.totalSales}</td>
                </tr>
            </tbody>
        </table>
    </div>
    <button onclick="downloadPDF()">Download PDF</button>
    <button onclick="salesReportExcel()">Export to Excel</button>
`;

            let table = new DataTable("#myTable");
        } catch (error) {
            console.error('Error generating sales report:', error);
        }
    });

    function downloadPDF() {
        console.log("downloading ");
        // Get the sales report section element
        const salesReportSection = document.getElementById('myTable');

        // Convert the sales report section HTML to PDF
        html2pdf()
            .set({
                margin: 10,
                filename: 'sales_report.pdf',
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'mm', format: 'a3', orientation: 'portrait' },
            })
            .from(salesReportSection)
            .save();
    }

    function salesReportExcel() {
        var wb = XLSX.utils.book_new();
        var ws = XLSX.utils.table_to_sheet(document.querySelector('#myTable'));

        ws['!cols'] = [
            { wch: 20 }, // Order Total
            { wch: 20 }, // Address
            { wch: 20 }, // Address
            { wch: 20 }
        ];

        XLSX.utils.book_append_sheet(wb, ws, "Sales Report");
        XLSX.writeFile(wb, "Sales Report.xlsx");
    }
</script>


</body>